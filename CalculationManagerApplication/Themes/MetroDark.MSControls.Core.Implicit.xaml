<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:local="clr-namespace:CalculationManagerApplication"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:CalculationManagerApplication.Converters"
                    mc:Ignorable="d">

	<!-- *********************************  RESOURCES  ********************************* -->
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Styles.WPF.xaml" />
        <ResourceDictionary Source="/CalculationManagerApplication;component/Themes/Generic.xaml" />
	</ResourceDictionary.MergedDictionaries>

    <converters:ListViewColumnsToVisibilityConverter x:Key="ListViewColumnsToVisibilityConverter"/>

    <!-- *********************************  BRUSHES  ********************************* -->
	<!--  Slider Brushes -->
    <SolidColorBrush x:Key="SliderThumbBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="SliderThumbHoverBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="SliderThumbPressedBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="SliderThumbDisabledBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="SliderTrackDisabledOverlayBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="SliderThumbFocusedBorderBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="SliderTrackBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="SliderSelectionRangeBackgroundBrush" Color="{StaticResource Color_024}" />

    <!--  Window Brushes -->
    <SolidColorBrush x:Key="DataGridColumnBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="DataGridColumnHoverBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="DataGridRowBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="DataGridRowHoverBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="DataGridRowSelectedBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="DataGridRowAlternatingBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="DataGridRowEditingBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="WindowCaptionBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="WindowCaptionErrorBrush" Color="{StaticResource Color_028}"/>
    <SolidColorBrush x:Key="TabItemSelectedBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="GeoSliderBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="ShiftButtonBackgroundBrush" Color="{StaticResource Color_006}" />

    <!--  GridSplitter Brushes -->
	<SolidColorBrush x:Key="GridSplitterBackgroundBrush" Color="{StaticResource Color_008}" />
	<SolidColorBrush x:Key="GridSplitterBorderBrush" Color="{StaticResource Color_004}" />
	<SolidColorBrush x:Key="GridSplitterHoverBackgroundBrush" Color="{StaticResource Color_006}" />
	<SolidColorBrush x:Key="GridSplitterHoverBorderBrush" Color="{StaticResource Color_003}" />
	<SolidColorBrush x:Key="GridSplitterPressedBackgroundBrush" Color="{StaticResource Color_024}" />
	<SolidColorBrush x:Key="GridSplitterFocusedBorderBrush" Color="{StaticResource Color_024}" />

	<!-- ProgressBar Brushes -->
	<SolidColorBrush x:Key="ProgressBarBackgroundBrush" Color="{StaticResource Color_005}" />
	<SolidColorBrush x:Key="ProgressBarForegroundBrush" Color="{StaticResource Color_024}" />
	<LinearGradientBrush x:Key="ProgressBarIndeterminateBackgroundBrush" EndPoint="0,1" MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="20,1" Opacity="0.8">
		<LinearGradientBrush.Transform>
			<TransformGroup>
				<TranslateTransform X="0" />
				<SkewTransform AngleX="-30" />
			</TransformGroup>
		</LinearGradientBrush.Transform>
		<GradientStop Color="{StaticResource Color_023}" Offset="0.249" />
		<GradientStop Color="{StaticResource Color_024}" Offset=".25" />
		<GradientStop Color="{StaticResource Color_024}" Offset="0.75" />
		<GradientStop Color="{StaticResource Color_023}" Offset="0.751" />
	</LinearGradientBrush>

	<!-- Tooltip Brushes -->
	<SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{StaticResource Color_009}" />
	<SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_004}" />

	<!-- Expander Brushes -->
    <SolidColorBrush x:Key="ExpanderButtonBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ExpanderButtonBorderBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="ExpanderButtonHoverBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="ExpanderButtonHoverBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="ExpanderButtonPressedBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="ExpanderButtonPressedBorderBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="ExpanderArrowHoverBorderBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="ExpanderArrowPressedBorderBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="ExpanderArrowDisabledBorderBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="ExpanderDisabledForegroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="ExpanderDisabledBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="ExpanderBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ExpanderDisabledBorderBrush" Color="{StaticResource Color_005}" />

    <!-- GroupBox Brushes -->
	<SolidColorBrush x:Key="GroupBoxBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="GroupBoxDisabledBorderBrush" Color="{StaticResource Color_005}" />

	<!-- PassWordBox Brushes -->
	<SolidColorBrush x:Key="PasswordBoxForegroundBrush" Color="{StaticResource Color_024}" />

	<!-- *********************************  TextBlock Style  ********************************* -->
	<Style x:Key="TextBlockStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="FontSize" Value="13.333" />
		<Setter Property="FontFamily" Value="Segoe UI" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
	</Style>

	<!-- *********************************  Label Style  ********************************* -->
	<Style x:Key="LabelStyle" TargetType="{x:Type Label}">
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="FontSize" Value="13.333" />
        <Setter Property="Foreground" Value="{StaticResource LabelForegroundBrush}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

	<!-- *********************************  SliderRepeatButton Style  ********************************* -->
	<Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{StaticResource TransparentBrush}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <PathGeometry x:Key="HSliderThumbPathGeometry">
        <PathFigure StartPoint="0,0">
            <PathSegmentCollection>
                <LineSegment Point="10,0"/>
                <LineSegment Point="10,10"/>
                <LineSegment Point="5,14"/>
                <LineSegment Point="0,10"/>
                <LineSegment Point="0,0"/>
            </PathSegmentCollection>
        </PathFigure>
    </PathGeometry>

    <!-- *********************************  Slider Horizontal Thumb Style  ********************************* -->
	<Style x:Key="HSliderThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="MinHeight" Value="12" />
		<Setter Property="MinWidth" Value="8" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Path Fill="{TemplateBinding Background}" x:Name="ThumbBackground" Data="{StaticResource HSliderThumbPathGeometry}"/>
						<!--<Ellipse x:Name="ThumbBackground" Fill="{TemplateBinding Background}" Width="16" Height="16" />-->
                        <Path Fill="{StaticResource SliderThumbFocusedBorderBrush}" x:Name="FocusedVisualElement" Data="{StaticResource HSliderThumbPathGeometry}" StrokeThickness="2" Opacity="0"/>
                        <!--<Ellipse x:Name="FocusedVisualElement" Stroke="{StaticResource SliderThumbFocusedBorderBrush}" Width="16" Height="16" StrokeThickness="2" Opacity="0" />-->
                        <Path Fill="{StaticResource DisabledVisualElement}" x:Name="DisabledVisualElement" Data="{StaticResource HSliderThumbPathGeometry}" Opacity="0"/>
                        <!--<Ellipse x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Width="16" Height="16" Opacity="0" />-->
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
						</Trigger>
						<Trigger Property="IsMouseCaptured" Value="True">
							<Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="HSliderThumbInvertedStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="12" />
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Path Fill="{TemplateBinding Background}" x:Name="ThumbBackground" Data="{StaticResource HSliderThumbPathGeometry}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="180" CenterX="5" CenterY="7"/>
                            </Path.RenderTransform>
                        </Path>
                        <!--<Ellipse x:Name="ThumbBackground" Fill="{TemplateBinding Background}" Width="16" Height="16" />-->
                        <Path Fill="{StaticResource SliderThumbFocusedBorderBrush}" x:Name="FocusedVisualElement" Data="{StaticResource HSliderThumbPathGeometry}" StrokeThickness="2" Opacity="0">
                            <Path.RenderTransform>
                                <RotateTransform Angle="180" CenterX="5" CenterY="7"/>
                            </Path.RenderTransform>
                        </Path>
                        <!--<Ellipse x:Name="FocusedVisualElement" Stroke="{StaticResource SliderThumbFocusedBorderBrush}" Width="16" Height="16" StrokeThickness="2" Opacity="0" />-->
                        <Path Fill="{StaticResource DisabledVisualElement}" x:Name="DisabledVisualElement" Data="{StaticResource HSliderThumbPathGeometry}" Opacity="0">
                            <Path.RenderTransform>
                                <RotateTransform Angle="180" CenterX="5" CenterY="7"/>
                            </Path.RenderTransform>
                        </Path>
                        <!--<Ellipse x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Width="16" Height="16" Opacity="0" />-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Slider Vertical Thumb Style  ********************************* -->
	<Style x:Key="VSliderThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}" />
		<Setter Property="MinHeight" Value="8" />
		<Setter Property="MinWidth" Value="12" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid>
						<Ellipse x:Name="ThumbBackground" Fill="{TemplateBinding Background}" Width="16" Height="16" />
						<Ellipse x:Name="FocusedVisualElement" Stroke="{StaticResource SliderThumbFocusedBorderBrush}" Width="16" Height="16" StrokeThickness="2" Opacity="0" />
						<Ellipse x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Width="16" Height="16" Opacity="0" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
						</Trigger>
						<Trigger Property="IsMouseCaptured" Value="True">
							<Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  Slider Style  ********************************* -->
	<Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="6" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
							<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="6" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
							<Border x:Name="TrackBackground" Background="{StaticResource SliderTrackBackgroundBrush}" Height="6" Grid.Row="1" VerticalAlignment="center">
								<Canvas Margin="-6,-1">
									<Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource SliderSelectionRangeBackgroundBrush}" Height="6" Width="0" Visibility="Hidden" />
								</Canvas>
							</Border>
							<Track x:Name="PART_Track" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
								</Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HSliderThumbStyle}"/>
                                </Track.Thumb>
							</Track>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="TickPlacement" Value="TopLeft">
							<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HSliderThumbInvertedStyle}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0" />
						</Trigger>
						<Trigger Property="TickPlacement" Value="BottomRight">
							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2" />
						</Trigger>
						<Trigger Property="TickPlacement" Value="Both">
							<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
						</Trigger>
						<Trigger Property="IsSelectionRangeEnabled" Value="true">
							<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Foreground" TargetName="Thumb" Value="{StaticResource SliderThumbFocusedBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Slider}">
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="6" />
									<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="6" />
									<Border x:Name="TrackBackground" Background="{StaticResource SliderTrackBackgroundBrush}" Grid.Column="1" HorizontalAlignment="center" Width="6">
										<Canvas Margin="-1,-6">
											<Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource SliderSelectionRangeBackgroundBrush}" Visibility="Hidden" Width="6" />
										</Canvas>
									</Border>
									<Track x:Name="PART_Track" Grid.Column="1">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb x:Name="Thumb" Style="{StaticResource VSliderThumbStyle}" />
										</Track.Thumb>
									</Track>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="TickPlacement" Value="TopLeft">
									<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
									<Setter Property="Style" TargetName="Thumb" Value="{StaticResource VSliderThumbStyle}" />
									<Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5" />
								</Trigger>
								<Trigger Property="TickPlacement" Value="BottomRight">
									<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
									<Setter Property="Style" TargetName="Thumb" Value="{StaticResource VSliderThumbStyle}" />
									<Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5" />
								</Trigger>
								<Trigger Property="TickPlacement" Value="Both">
									<Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
									<Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
								</Trigger>
								<Trigger Property="IsSelectionRangeEnabled" Value="true">
									<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="true">
									<Setter Property="Foreground" TargetName="Thumb" Value="{StaticResource SliderThumbFocusedBorderBrush}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- *********************************  RepeatButton Style  ********************************* -->
	<Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="FontSize" Value="14.667" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="Padding" Value="10,0,10,2" />
		<Setter Property="MinHeight" Value="30" />
		<Setter Property="MinWidth" Value="30" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
										</ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
						<ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<ContentPresenter x:Name="contentPresenter" />
						</ContentControl>
						<Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
						<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ********************************** GridSplitter Style **********************************-->
	<Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="Background" Value="{StaticResource GridSplitterBackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource GridSplitterBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="PreviewStyle">
			<Setter.Value>
				<Style TargetType="Control">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Fill="{StaticResource GridSplitterPressedBackgroundBrush}" Opacity="0.8" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid>
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" MinHeight="8" MinWidth="8">
							<Grid>
								<StackPanel x:Name="HGrip" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Vertical">
									<Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="1" Margin="1,2,1,1" StrokeThickness="0" Width="20" />
									<Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="1" Margin="1,1,1,2" StrokeThickness="0" Width="20" />
								</StackPanel>
								<StackPanel x:Name="VGrip" Width="8" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal" Visibility="Collapsed">
									<Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="20" Margin="2,1,1,1" StrokeThickness="0" Width="1" />
									<Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="20" Margin="1,1,2,1" StrokeThickness="0" Width="1" />
								</StackPanel>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HorizontalAlignment" Value="Stretch">
							<Setter TargetName="HGrip" Property="Visibility" Value="Visible" />
							<Setter TargetName="VGrip" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="VerticalAlignment" Value="Stretch">
							<Setter TargetName="VGrip" Property="Visibility" Value="Visible" />
							<Setter TargetName="HGrip" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource GridSplitterHoverBackgroundBrush}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterHoverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterFocusedBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ********************************** ProgressBar Style **********************************-->
	<Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
		<Setter Property="Foreground" Value="{StaticResource ProgressBarForegroundBrush}" />
		<Setter Property="Background" Value="{StaticResource ProgressBarBackgroundBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Height" Value="6" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Determinate" />
								<VisualState x:Name="Indeterminate">
									<Storyboard RepeatBehavior="Forever">
										<DoubleAnimation Duration="00:00:.5" From="0" To="20" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X" Storyboard.TargetName="IndeterminateGradientFill" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ProgressBarTrack" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
						<Rectangle x:Name="PART_Track" Margin="{TemplateBinding BorderThickness}" />
						<Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="{TemplateBinding BorderThickness}">
							<Grid x:Name="Foreground">
								<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
							</Grid>
						</Decorator>
						<Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
							<Rectangle x:Name="IndeterminateSolidFill" Fill="{TemplateBinding Foreground}" Margin="{TemplateBinding BorderThickness}" Opacity="1" RenderTransformOrigin="0.5,0.5" StrokeThickness="0" />
							<Rectangle x:Name="IndeterminateGradientFill" Fill="{StaticResource ProgressBarIndeterminateBackgroundBrush}" Margin="{TemplateBinding BorderThickness}" StrokeThickness="1" />
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="LayoutTransform" TargetName="TemplateRoot">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsIndeterminate" Value="true">
							<Setter Property="Visibility" TargetName="Indicator" Value="Collapsed" />
							<Setter Property="Visibility" TargetName="IndeterminateRoot" Value="Visible" />
						</Trigger>
						<Trigger Property="IsIndeterminate" Value="false">
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ********************************** PasswordBox Style **********************************-->
	<Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="FontSize" Value="13.333" />
		<Setter Property="Foreground" Value="{StaticResource PasswordBoxForegroundBrush}" />
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="6,4" />
		<Setter Property="MinHeight" Value="30" />
		<Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
		<Setter Property="PasswordChar" Value="●" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}"/>
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Grid>
						<Border Background="{TemplateBinding Background}" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
						<Border x:Name="DisabledVisualElement" BorderBrush="{StaticResource DisabledVisualElement}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource DisabledVisualElement}" IsHitTestVisible="False" Opacity="0" />
						<Border x:Name="ReadOnlyVisualElement" Background="{StaticResource TextBoxReadOnlyBackgroundBrush}" Opacity="0" />
						<Border>
							<ScrollViewer x:Name="PART_ContentHost" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="1" TargetName="DisabledVisualElement" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}" TargetName="Bd" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" Value="{StaticResource TextBoxFocusedBrush}" TargetName="Bd" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True" />
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Opacity" Value="1" TargetName="ReadOnlyVisualElement" />
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  ToolTip Style  ********************************* -->
	<Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="FontSize" Value="14.667" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="10,7" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Grid>
						<Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" />
						<StackPanel Orientation="Horizontal" d:LayoutOverrides="Width, Height">
							<ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
						</StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  Expander Right Style  ********************************* -->
	<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="30" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="-90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Rectangle x:Name="rectangle" Width="30" Height="30" Fill="{StaticResource ExpanderButtonBackgroundBrush}" HorizontalAlignment="Center" Stroke="{StaticResource ExpanderButtonBorderBrush}" VerticalAlignment="Center" />
								<Path x:Name="arrow" Width="10" Height="6" Fill="{StaticResource GlyphBackgroundBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" RenderTransformOrigin="0.5, 0.5" />
							</Grid>
							<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Stretch" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowHoverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
						</Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="rectangle" Value="0.5" />
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowDisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  Expander Up Style  ********************************* -->
	<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="30" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Rectangle x:Name="rectangle" Width="30" Height="30" Fill="{StaticResource ExpanderButtonBackgroundBrush}" HorizontalAlignment="Center" Stroke="{StaticResource ExpanderButtonBorderBrush}" VerticalAlignment="Center" />
								<Path x:Name="arrow" Width="10" Height="6" Fill="{StaticResource GlyphBackgroundBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" RenderTransformOrigin="0.5, 0.5" />
							</Grid>
							<ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowHoverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
						</Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="rectangle" Value="0.5" />
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowDisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  Expander Left Style  ********************************* -->
	<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="30" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Rectangle x:Name="rectangle" Width="30" Height="30" Fill="{StaticResource ExpanderButtonBackgroundBrush}" HorizontalAlignment="Center" Stroke="{StaticResource ExpanderButtonBorderBrush}" VerticalAlignment="Center" />
								<Path x:Name="arrow" Width="10" Height="6" Fill="{StaticResource GlyphBackgroundBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" RenderTransformOrigin="0.5, 0.5" />
							</Grid>
							<ContentPresenter Grid.Row="1" HorizontalAlignment="Center" Margin="0,4,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Stretch" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowHoverBorderBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
						</Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="rectangle" Value="0.5" />
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowDisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  Expander Down Style  ********************************* -->
	<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="{StaticResource TransparentBrush}" SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="30" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
                            <Rectangle x:Name="rectangle" 
                                       Width="30" 
                                       Height="30" 
                                       Fill="{StaticResource ExpanderButtonBackgroundBrush}" 
                                       HorizontalAlignment="Center" 
                                       Stroke="{StaticResource ExpanderButtonBorderBrush}" 
                                       VerticalAlignment="Center" />
                            <Path x:Name="arrow" 
                                  Width="10" 
                                  Height="6" 
                                  Fill="{StaticResource GlyphBackgroundBrush}" 
                                  Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " 
                                  Stretch="Fill" 
                                  RenderTransformOrigin="0.5, 0.5" />
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1" 
                                              HorizontalAlignment="Stretch"
                                              Margin="4,0,0,0"
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="True" 
                                              VerticalAlignment="Center" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M3.4,-4.4 L6.8,3.9 3.9566912E-07,3.9 z" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ExpanderButtonHoverBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonHoverBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowHoverBorderBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource LightForegroundBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBackgroundBrush}" />
							<Setter Property="Stroke" TargetName="rectangle" Value="{StaticResource ExpanderButtonPressedBorderBrush}" />
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
						</Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="rectangle" Value="0.5" />
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowDisabledBorderBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  Expander Style  ********************************* -->
	<Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="FontSize" Value="14.667" />
        <!--<Setter Property="Background" Value="{StaticResource ExpanderBackgroundBrush}"/>-->
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush}"/>
        <Setter Property="Padding" Value="2" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
                            x:Name="Border"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="0" 
                            SnapsToDevicePixels="true">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite" 
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                          Content="{TemplateBinding Header}" 
                                          DockPanel.Dock="Top" 
                                          Foreground="{TemplateBinding Foreground}" 
                                          FontWeight="{TemplateBinding FontWeight}" 
                                          FontStyle="{TemplateBinding FontStyle}" 
                                          FontStretch="{TemplateBinding FontStretch}" 
                                          FontSize="{TemplateBinding FontSize}" 
                                          FontFamily="{TemplateBinding FontFamily}" 
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" 
                                          Style="{StaticResource ExpanderDownHeaderStyle}" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
							<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Right">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ExpanderDisabledForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource GroupBoxDisabledBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ExpanderDisabledBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  ToggleButton Style  ********************************* -->
	<Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="FontSize" Value="14.667" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="Padding" Value="10,0,10,2" />
		<Setter Property="MinHeight" Value="30" />
		<Setter Property="MinWidth" Value="30" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
										</ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
						<Rectangle x:Name="checked" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
                        <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl x:Name="contentControl1" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{StaticResource ForegroundBrush}">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
						<Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************************  GroupBox Style  ********************************* -->
	<BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
	<Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="FontSize" Value="14.667" />
		<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="3 0" />
        <Setter Property="Margin" Value="3 0" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="6" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="6" />
						</Grid.RowDefinitions>
						<Border BorderBrush="{StaticResource TransparentBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="1" Grid.RowSpan="3" />
                        <Border x:Name="Header" Grid.Column="1" Padding="5,2,5,0" Grid.Row="0" Grid.RowSpan="2">
                            <ContentPresenter ContentSource="Header"
                                                x:Name="contentPrensenterHeader"
                                                Height="20" 
                                                VerticalAlignment="Center" HorizontalAlignment="Left"
                                                RecognizesAccessKey="True" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                TextBlock.Foreground="{StaticResource LabelForegroundBrush}"/>
                        </Border>
						<ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3">
							<Border.OpacityMask>
								<MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
									<Binding ElementName="Header" Path="ActualWidth" />
									<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
									<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
								</MultiBinding>
							</Border.OpacityMask>
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							</Border>
						</Border>
					</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.Setters>
                                <Setter Property="TextBlock.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource GroupBoxDisabledBorderBrush}"/>
                                <Setter TargetName="contentPrensenterHeader" Property="TextBlock.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Webdings"/>
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="WindowToggleButtonStyle" BasedOn="{StaticResource ToggleButtonStyle}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Webdings"/>
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Setter Property="Focusable" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="6"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowResizeGripper" TargetType="{x:Type Thumb}">
        <Setter Property="MinWidth" Value="9" />
        <Setter Property="MinHeight" Value="9" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}">
                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style TargetType="{x:Type Window}" x:Key="WindowStyle">
        <Setter Property="Background" Value="{StaticResource ResourceKey=WindowBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=ForegroundBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" x:Name="PART_CaptionRow"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Border Grid.Row="0" 
                                    x:Name="PART_Caption"
                                    Background="{StaticResource WindowCaptionBackgroundBrush}"
                                    Margin="0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{TemplateBinding Title}"
                                               Margin="10,5"
                                               TextWrapping="WrapWithOverflow"
                                               Foreground="{TemplateBinding Foreground}" 
                                               FontWeight="Bold"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"/>
                                    <Rectangle x:Name="PART_MoveRectangle" 
                                               Fill="Transparent" 
                                               Grid.ColumnSpan="2"/>
                                    <StackPanel Grid.Column="1"
                                                Orientation="Horizontal" 
                                                HorizontalAlignment="Right" 
                                                VerticalAlignment="Top"
                                                Margin="0,-1,10,5"
                                                Panel.ZIndex="2">
                                        <!--<ToggleButton x:Name="PART_optionButton" Style="{StaticResource WindowToggleButtonStyle}" IsChecked="True"/>-->
                                        <Button x:Name="PART_minimizeButton" Style="{StaticResource WindowButtonStyle}" Content="0" />
                                        <Button x:Name="PART_restoreButton" Style="{StaticResource WindowButtonStyle}" Content="1" />
                                        <Button x:Name="PART_closeButton" Style="{StaticResource WindowButtonStyle}" Content="r" />
                                    </StackPanel>
                                </Grid>
                            </Border>

                            <Grid Grid.Row="1" Background="{TemplateBinding Background}" Margin="5,0,5,5">
                                <AdornerDecorator>
                                    <ContentPresenter />
                                </AdornerDecorator>
                            </Grid>

                            <Grid Grid.RowSpan="2" 
                                  x:Name="PART_ReseizeGrips">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type Thumb}" BasedOn="{StaticResource WindowResizeGripper}"/>
                                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                                </Grid.Resources>

                                <Thumb VerticalAlignment="Top" Cursor="SizeNS" Visibility="{Binding ElementName=PART_optionButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Thumb VerticalAlignment="Bottom" Cursor="SizeNS" Visibility="{Binding ElementName=PART_optionButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Thumb HorizontalAlignment="Right" Cursor="SizeWE"/>
                                <Thumb HorizontalAlignment="Left" Cursor="SizeWE"/>

                                <Thumb VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE" Visibility="{Binding ElementName=PART_optionButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Thumb VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW" Visibility="{Binding ElementName=PART_optionButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Thumb VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE" Visibility="{Binding ElementName=PART_optionButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Thumb VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW" Visibility="{Binding ElementName=PART_optionButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowStyle" Value="ToolWindow">
                            <Setter TargetName="PART_minimizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_restoreButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsError}" Value="True">
                            <Setter TargetName="PART_Caption" Property="Background" Value="{StaticResource WindowCaptionErrorBrush}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource RepeatButtonStyle}" x:Key="NextPrevGeoSliderButtonStyle" x:Shared="False">
        <Setter Property="Width" Value="22"/>
        <Setter Property="MinWidth" Value="22"/>
        <Setter Property="MaxWidth" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Margin" Value="4,4"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Viewbox Width="10" Height="10" x:Key="plusViewBoxWhite" Stretch="UniformToFill" x:Shared="False">
        <Path Style="{StaticResource plusPathStyle}" Stroke="{StaticResource ForegroundBrush}"/>
    </Viewbox>

    <Viewbox Width="10" Height="10" x:Key="minusViewBoxWhite" Stretch="UniformToFill" x:Shared="False">
        <Path Style="{StaticResource minusPathStyle}" Stroke="{StaticResource ForegroundBrush}"/>
    </Viewbox>-->

    <Style TargetType="{x:Type Border}" x:Key="ThemeBorderStyle">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonHoverBorderBrush}"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="PopupBorderStyle" BasedOn="{StaticResource ThemeBorderStyle}">
        <Setter Property="Effect" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Effect}"/>
    </Style>
    
    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="TextBlock.FontSize" Value="13.3333"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Name="Border" 
                            BorderThickness="1,1,1,0" 
                            BorderBrush="{StaticResource ForegroundBrush}" 
                            Margin="0,0,2,0"
                            Background="{TemplateBinding Background}"
                            >
                        <Grid>
                            <ContentPresenter Name="ContentSite"
                                              TextBlock.Foreground="{TemplateBinding TextBlock.Foreground}"
                                              TextBlock.FontSize="{TemplateBinding TextBlock.FontSize}"
                                              IsEnabled="{TemplateBinding IsEnabled}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              Margin="10,2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{StaticResource LightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{StaticResource LabelForegroundBrush}" />
                            <Setter Property="Background" Value="{StaticResource TabItemSelectedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledVisualElement}"/>
                            <Setter TargetName="Border" Property="Effect" Value="{x:Null}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}" x:Key="TabControlStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color_009}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TabPanel x:Name="HeaderPanel"
                            Grid.Row="0"
                            Panel.ZIndex="1"
                            Margin="0,0,4,-1"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1"
                            Background="Transparent"/>
                        <Border x:Name="Border"
                              Grid.Row="1"
                              BorderThickness="1"
                              CornerRadius="2"
                              KeyboardNavigation.TabNavigation="Local"
                              KeyboardNavigation.DirectionalNavigation="Contained"
                              KeyboardNavigation.TabIndex="2"
                              BorderBrush="{StaticResource ForegroundBrush}"
                              Background="{StaticResource TabItemSelectedBackgroundBrush}">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                              Margin="4"
                              ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="ToolPageHeaderBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonHoverBorderBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ContentControl}" x:Key="PageToolHeaderContentControlThemeStyle">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Style="{StaticResource ToolPageHeaderBorderStyle}" x:Name="PART_Border">
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" x:Name="BackgroundBrush"/>
                        </Border.Background>
                        <Grid>
                            <Rectangle Stroke="{Binding ElementName=PART_Border, Path=BorderBrush}" StrokeThickness="2" Visibility="Hidden"
                                       x:Name="PART_BorderFrame"/>
                            <ContentPresenter Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=Content}"
                                              Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Alert}" Value="Warning"/>
                                <Condition Binding="{Binding IsAcknowledged}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_Border" Property="Background" Value="Orange"/>
                                <Setter Property="Foreground" Value="{DynamicResource BlackForegroundBrush}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Alert}" Value="Warning"/>
                                <Condition Binding="{Binding IsAcknowledged}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundBrush"
                                                        Storyboard.TargetProperty="Color"
                                                        From="Transparent" To="Orange" Duration="0:0:0.5"
                                                        AutoReverse="True" 
                                                        RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Alert}" Value="Alarm"/>
                                <Condition Binding="{Binding IsAcknowledged}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_Border" Property="Background" Value="Red"/>
                                <Setter Property="Foreground" Value="{DynamicResource BlackForegroundBrush}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Alert}" Value="Alarm"/>
                                <Condition Binding="{Binding IsAcknowledged}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundBrush"
                                                        Storyboard.TargetProperty="Color"
                                                        From="Transparent" To="Red" Duration="0:0:0.5"
                                                        AutoReverse="True" 
                                                        RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource LightForegroundBrush}"/>
                            <Setter TargetName="PART_BorderFrame" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource LightForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="{x:Type ContentControl}" x:Key="PageToolHeaderContentControlThemeStyle">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="PART_Border" BorderThickness="0">
                        <Grid>
                            <Rectangle StrokeThickness="1" x:Name="PART_BorderDefaultFrame"
                                       Stroke="{StaticResource ButtonHoverBorderBrush}"/>

                            <Rectangle StrokeThickness="2" x:Name="PART_BorderAlarmFrame" 
                                       Visibility="Hidden">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="Transparent" x:Name="BackgroundBrush"/>
                                </Rectangle.Stroke>
                            </Rectangle>

                            <ContentPresenter Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=Content}"
                                              Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Alert}" Value="Warning"/>
                                <Condition Binding="{Binding IsAcknowledged}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_BorderAlarmFrame" Property="Stroke" Value="Orange"/>
                                <Setter TargetName="PART_BorderAlarmFrame" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Alert}" Value="Warning"/>
                                <Condition Binding="{Binding IsAcknowledged}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_BorderAlarmFrame" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundBrush"
                                                        Storyboard.TargetProperty="Color"
                                                        From="Transparent" To="Orange" Duration="0:0:0.5"
                                                        AutoReverse="True" 
                                                        RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Alert}" Value="Alarm"/>
                                <Condition Binding="{Binding IsAcknowledged}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_BorderAlarmFrame" Property="Stroke" Value="Red"/>
                                <Setter TargetName="PART_BorderAlarmFrame" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Alert}" Value="Alarm"/>
                                <Condition Binding="{Binding IsAcknowledged}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_BorderAlarmFrame" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BackgroundBrush"
                                                        Storyboard.TargetProperty="Color"
                                                        From="Transparent" To="Red" Duration="0:0:0.5"
                                                        AutoReverse="True" 
                                                        RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource LightForegroundBrush}"/>
                            <Setter TargetName="PART_BorderDefaultFrame" Property="Stroke" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource LightForegroundBrush}"/>
                            <Setter TargetName="PART_BorderDefaultFrame" Property="Stroke" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ContentControl}" x:Key="PageHeaderContentControlStyle" BasedOn="{StaticResource PageToolHeaderContentControlThemeStyle}"/>
    <Style TargetType="{x:Type ContentControl}" x:Key="ToolHeaderContentControlStyle" BasedOn="{StaticResource PageToolHeaderContentControlThemeStyle}"/>

    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="DataGridColumnHeaderStyle">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SeparatorBrush" Value="{StaticResource ButtonHoverBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="columnHeaderBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DataGridColumnHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="columnHeaderBorder"
		                    BorderThickness="1"
		                    Padding="3,2,3,2"
                            BorderBrush="{StaticResource ButtonBorderBrush}"
                            Background="{StaticResource DataGridColumnBackgroundBrush}">
                            <ContentControl x:Name="ContentControl" 
                                            Foreground="{TemplateBinding Foreground}" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Margin="{TemplateBinding Padding}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter x:Name="contentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ContentControl>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}" x:Key="DataGridRowStyle">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
			                BorderBrush="{TemplateBinding BorderBrush}"
			                BorderThickness="{TemplateBinding BorderThickness}"
		                    SnapsToDevicePixels="True"
                            Background="{StaticResource DataGridRowBackgroundBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Normal_AlternatingRow">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DataGridRowAlternatingBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DataGridRowSelectedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DataGridRowHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
			                                        ItemsPanel="{TemplateBinding ItemsPanel}"
			                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                    Foreground="{TemplateBinding Foreground}"/>
                            <DataGridDetailsPresenter Grid.Row="1"
			                                          Grid.Column="1"
			                                          SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, 
                                                        ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
			                                            Converter={x:Static DataGrid.RowDetailsScrollingConverter},
			                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
			                                            Visibility="{TemplateBinding DetailsVisibility}" 
                                                      />
                            <DataGridRowHeader Grid.RowSpan="2" 
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
			                                   Visibility="{Binding HeadersVisibility,
                                                 ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                 Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                               />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridCell}" x:Key="DataGridCellStyle">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border"
			                Background="Transparent"
                            BorderBrush="Transparent"
			                BorderThickness="1"
			                SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditing" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <Border Background="{StaticResource DataGridRowEditingBackgroundBrush}" SnapsToDevicePixels="True">
                                <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.Text, Mode=TwoWay, UpdateSourceTrigger=Default}"
                                     HorizontalAlignment="Stretch" 
                                     VerticalAlignment="Stretch" 
                                     VerticalContentAlignment="Center"
                                     Padding="0" 
                                     BorderThickness="0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}" x:Key="RowHeaderStyle">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource DataGridColumnBackgroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="ColumnHeaderStyle">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource DataGridColumnBackgroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type DataGrid}" x:Key="DataGridStyle">
        <Setter Property="RowHeaderStyle" Value="{StaticResource RowHeaderStyle}"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="RowHeaderWidth" Value="8"/>
    </Style>

    <!-- *********************************  GridViewColumnHeaderGripper Style ********************************* -->
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18" />
        <Setter Property="Background" Value="{StaticResource DataGridColumnBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
    </Style>

    <!-- *********************************  GridViewColumnHeader Style ********************************* -->
    <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="GridViewColumnHeaderStyle">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--<Setter Property="SeparatorBrush" Value="{StaticResource ButtonHoverBorderBrush}" />-->
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="columnHeaderBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DataGridColumnHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="columnHeaderBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DataGridColumnHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="columnHeaderBorder"
		                    BorderThickness="1"
		                    Padding="3,2,3,2"
                            BorderBrush="{StaticResource ButtonBorderBrush}"
                            Background="{StaticResource DataGridColumnBackgroundBrush}">
                            <ContentControl x:Name="ContentControl" 
                                            Foreground="{TemplateBinding Foreground}" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Margin="{TemplateBinding Padding}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter x:Name="contentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ContentControl>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                               HorizontalAlignment="Right"
                               Margin="0,0,-9,0"
                               Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ScrollVieweristView Style ********************************* -->
    <Style x:Key="ScrollVieweristViewStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DockPanel  Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="false">
                                <GridViewHeaderRowPresenter Margin="0"
                                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.View.Columns, Converter={StaticResource ListViewColumnsToVisibilityConverter}}"
                                                            Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                    CanContentScroll="True" 
                                                    CanHorizontallyScroll="False" 
                                                    CanVerticallyScroll="False"
                                                    KeyboardNavigation.DirectionalNavigation="Local"/>
                        </DockPanel>

                        <!--<ScrollBar x:Name="PART_VerticalScrollBar" 
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow" 
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   Minimum="0" 
                                   Grid.Row="0" 
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportHeight}" 
                                   Style="{StaticResource ScrollBarStyle}" />-->

                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

                        <!--<ScrollBar x:Name="PART_HorizontalScrollBar" 
                                   AutomationProperties.AutomationId="HorizontalScrollBar" 
                                   Cursor="Arrow" 
                                   Grid.Column="0" 
                                   Maximum="{TemplateBinding ScrollableWidth}" 
                                   Minimum="0" 
                                   Orientation="Horizontal" 
                                   Grid.Row="1" 
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}" 
                                   Style="{StaticResource ScrollBarStyle}" />-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ListViewItem Style  ********************************* -->
    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="13.333" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BgSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BgSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="BgSelected" Fill="{StaticResource DataGridRowSelectedBackgroundBrush}" Stroke="{StaticResource ListBoxItemSelectedBorderBrush}" Visibility="Collapsed" />

                        <GridViewRowPresenter x:Name="contentControl"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              TextBlock.Foreground="{StaticResource ForegroundBrush}"/>

                        <Rectangle x:Name="FocusedVisualElement" IsHitTestVisible="False" Visibility="Collapsed" Stroke="{StaticResource ListBoxItemPressedBorderBrush}" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="contentControl" Property="TextBlock.Foreground" Value="{StaticResource LightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="contentControl" Property="TextBlock.Foreground" Value="{StaticResource LightForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ListView Style  ********************************* -->
    <Style x:Key="ListViewStyle" TargetType="ListView">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                            <ScrollViewer Style="{StaticResource ScrollVieweristViewStyle}" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ValidationErrorElement}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="{StaticResource TransparentBrush}" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationErrorElement}" Margin="-1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource LightForegroundBrush}" Margin="-1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--********************** Implicit Styles *********************** -->
    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}" />
    <!--<Style BasedOn="{StaticResource TextBlockStyle}" TargetType="{x:Type TextBlock}" />-->
    <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="{x:Type ScrollBar}" />
    <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="{x:Type ScrollViewer}" />
    <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />
    <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}" />
    <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type TextBox}" />
    <Style BasedOn="{StaticResource ListBoxStyle}" TargetType="{x:Type ListBox}" />
    <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="{x:Type ListBoxItem}" />
    <Style BasedOn="{StaticResource ListViewStyle}" TargetType="{x:Type ListView}" />
    <Style BasedOn="{StaticResource ListViewItemStyle}" TargetType="{x:Type ListViewItem}" />
    <Style BasedOn="{StaticResource GridViewColumnHeaderStyle}" TargetType="{x:Type GridViewColumnHeader}" />
    <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="{x:Type CheckBox}" />
    <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="{x:Type RadioButton}" />
    <Style BasedOn="{StaticResource LabelStyle}" TargetType="{x:Type Label}" />
    <Style BasedOn="{StaticResource SliderStyle}" TargetType="{x:Type Slider}" />
    <Style BasedOn="{StaticResource RepeatButtonStyle}" TargetType="{x:Type RepeatButton}" />
    <Style BasedOn="{StaticResource GridSplitterStyle}" TargetType="{x:Type GridSplitter}" />
    <Style BasedOn="{StaticResource ProgressBarStyle}" TargetType="{x:Type ProgressBar}" />
    <Style BasedOn="{StaticResource PasswordBoxStyle}" TargetType="{x:Type PasswordBox}" />
    <Style BasedOn="{StaticResource ExpanderStyle}" TargetType="{x:Type Expander}" />
    <Style BasedOn="{StaticResource ToggleButtonStyle}" TargetType="{x:Type ToggleButton}" />
    <Style BasedOn="{StaticResource GroupBoxStyle}" TargetType="{x:Type GroupBox}" />
    <Style BasedOn="{StaticResource WindowStyle}" TargetType="{x:Type Window}" />
    <Style BasedOn="{StaticResource TabItemStyle}" TargetType="{x:Type TabItem}" />
    <Style BasedOn="{StaticResource TabControlStyle}" TargetType="{x:Type TabControl}" />
    <Style BasedOn="{StaticResource DataGridColumnHeaderStyle}" TargetType="{x:Type DataGridColumnHeader}" />
    <Style BasedOn="{StaticResource DataGridRowStyle}" TargetType="{x:Type DataGridRow}"/>
    <Style BasedOn="{StaticResource DataGridCellStyle}" TargetType="{x:Type DataGridCell}"/>
    <Style BasedOn="{StaticResource DataGridStyle}" TargetType="{x:Type DataGrid}"/>

</ResourceDictionary>